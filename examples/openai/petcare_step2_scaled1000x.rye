
rye .needs { openai vector }

pass-print: fn { val txt } { .pass { print txt } }

ai: new-openai-client trim read %.apitoken

print "Trying to load Questions and Answers ..."

read\bytes %petcare_1000x.bson |fix\either {

	print "BSON missing, creating it ..."
	
	read %petcare.txt
	|split newline
	|purge { .length? = 0 } :lines1
	|table* { "text" }
	|display
	|pass-print "Creating embeddings ..."
	|gen-col 'embedding { text } { .create-embeddings* ai }
	:spr1 :spr
	
	; For testing purposes we multiply table rows 1000 times
	loop 1000 { spr: spr .add-rows get-rows spr1 }	
	
	spr .to-bson .write* %petcare_1000x.bson
} {
	.from-bson :spr
}

get-input "Enter your search phrase: "
|create-embeddings* ai :q1

print "Calculating similarities ..."
spr .gen-col 'similarity { embedding } { .cosine-similarity q1 } :spr
|pass-print "Sorting ..."
|sort-col\desc! 'similarity :spr
|pass-print "Limiting ..."
|limit 10
|display

